{"version":3,"sources":["js/views/TaskAnalytics/index.js","js/views/TaskAnalytics/style.module.scss"],"names":["cx","classnames","bind","styles","isSameDate","first","second","isSameYear","isSameMonth","isSameDay","today","Date","startOfThisWeek","startOfWeek","endOfThisWeek","endOfWeek","formatDate","date","format","propTypes","tasks","PropTypes","arrayOf","TaskPropTypes","task","connect","state","props","selectors","getList","_useState","useState","start","end","_useState2","Object","_Users_minghaotsai_Documents_MyRepository_front_end_challenge_2019_week_1_pomodoro_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","period","setPeriod","periodInterval","eachDayOfInterval","histories","reduce","acc","concat","_Users_minghaotsai_Documents_MyRepository_front_end_challenge_2019_week_1_pomodoro_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","workHistory","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","Fragment","_components_Typography__WEBPACK_IMPORTED_MODULE_17__","Title","level","color","marginBottom","letterSpacing","Hr","marginTop","fontWeight","className","Text","fontSize","lineHeight","filter","time","length","isSameWeek","style","marginLeft","map","index","dateHistories","key","align","toUpperCase","_components_Button__WEBPACK_IMPORTED_MODULE_16__","size","shape","isFilled","width","onClick","event","subWeeks","disabled","addWeeks","module","exports","task-analytics__panel","task-analytics__row","task-analytics__column","task-analytics__chart-wrapper","task-analytics__chart","task-analytics__grid","task-analytics__count-wrapper","task-analytics__count","task-analytics__week","task-analytics__date","task-analytics__navigation-wrapper"],"mappings":"gWAkBMA,EAAKC,IAAWC,KAAKC,KACrBC,EAAa,SAACC,EAAOC,GAAR,OAAmBC,YAAWF,EAAOC,IAAWE,YAAYH,EAAOC,IAAWG,YAAUJ,EAAOC,IAC5GI,EAAQ,IAAIC,KACZC,EAAkBC,YAAYH,GAC9BI,EAAgBC,YAAUL,GAC1BM,EAAa,SAAAC,GAAI,OAAIC,YAAOD,EAAM,UAE3BE,EAAY,CACvBC,MAAOC,IAAUC,QAAQC,IAAcC,OA0H1BC,sBARS,SAACC,EAAOC,GAC9B,MAAO,CACLP,MAAOQ,IAAUC,QAAQH,EAAOC,KAIT,GAEZF,CAvHf,SAAwBE,GAAO,IACrBP,EAAUO,EAAVP,MADqBU,EAGDC,mBAAS,CAAEC,MAAOpB,EAAiBqB,IAAKnB,IAHvCoB,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAGtBO,EAHsBH,EAAA,GAGdI,EAHcJ,EAAA,GAIvBK,EAAiBC,YAAkBH,GAEnCI,EAAYrB,EAAMsB,OAAO,SAACC,EAAKnB,GAAN,SAAAoB,OAAAT,OAAAU,EAAA,EAAAV,CAAmBQ,GAAnBR,OAAAU,EAAA,EAAAV,CAA2BX,EAAKsB,eAAc,IAE7E,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAWC,MAAZ,CAAkBC,MAAM,KAAKC,MAAM,QAAQC,aAAc,EAAGC,cAAc,QAA1E,oBAIAT,EAAAC,EAAAC,cAACE,EAAA,EAAWM,GAAZ,CAAeC,UAAW,GAAIH,aAAc,KAE5CR,EAAAC,EAAAC,cAACE,EAAA,EAAWC,MAAZ,CAAkBC,MAAM,KAAKC,MAAM,aAAaK,WAAY,IAAKJ,aAAc,IAA/E,uBAIAR,EAAAC,EAAAC,cAAA,OAAKW,UAAW5D,EAAG,wBAAyB,wBAC1C+C,EAAAC,EAAAC,cAAA,OAAKW,UAAW5D,EAAG,2BACjB+C,EAAAC,EAAAC,cAACE,EAAA,EAAWU,KAAZ,CAAiBP,MAAM,UAAUQ,SAAU,GAAIH,WAAY,IAAKJ,aAAc,EAAGQ,WAAY,KAC1FtB,EAAUuB,OAAO,SAAAC,GAAI,OAAI7D,EAAW6D,EAAMvD,KAAQwD,QAErDnB,EAAAC,EAAAC,cAACE,EAAA,EAAWU,KAAZ,CAAiBP,MAAM,QAAQQ,SAAU,GAAIC,WAAY,GAAzD,UAIFhB,EAAAC,EAAAC,cAAA,OAAKW,UAAW5D,EAAG,2BACjB+C,EAAAC,EAAAC,cAACE,EAAA,EAAWU,KAAZ,CAAiBP,MAAM,UAAUQ,SAAU,GAAIH,WAAY,IAAKJ,aAAc,EAAGQ,WAAY,KAC1FtB,EAAUuB,OAAO,SAAAC,GAAI,OAAIE,YAAWF,EAAMvD,KAAQwD,QAErDnB,EAAAC,EAAAC,cAACE,EAAA,EAAWU,KAAZ,CAAiBP,MAAM,QAAQQ,SAAU,GAAIC,WAAY,GACtD/C,EAAWJ,GADd,IACiCI,EAAWF,MAKhDiC,EAAAC,EAAAC,cAACE,EAAA,EAAWM,GAAZ,CAAeC,UAAW,GAAIH,aAAc,KAE5CR,EAAAC,EAAAC,cAACE,EAAA,EAAWC,MAAZ,CAAkBC,MAAM,KAAKC,MAAM,aAAaK,WAAY,IAAKJ,aAAc,IAA/E,QAEER,EAAAC,EAAAC,cAACE,EAAA,EAAWU,KAAZ,CAAiBC,SAAU,GAAIR,MAAM,QAAQC,aAAc,EAAGa,MAAO,CAAEC,WAAY,IAChFrD,EAAWqB,EAAOL,OADrB,IAC8BhB,EAAWqB,EAAOJ,OAIlDc,EAAAC,EAAAC,cAAA,OAAKW,UAAW5D,EAAG,kCACjB+C,EAAAC,EAAAC,cAAA,OAAKW,UAAW5D,EAAG,wBAAyB,0BAC1C+C,EAAAC,EAAAC,cAAA,OAAKW,UAAW5D,EAAG,yBAChBuC,EAAe+B,IAAI,SAACrD,EAAMsD,GACzB,IAAMC,EAAgB/B,EAAUuB,OAAO,SAAAC,GAAI,OAAI7D,EAAW6D,EAAMhD,KAEhE,OACE8B,EAAAC,EAAAC,cAAA,OAAKwB,IAAKF,EAAOX,UAAW5D,EAAG,kCAC5BwE,EAAcN,OAAS,GACtBnB,EAAAC,EAAAC,cAACE,EAAA,EAAWU,KAAZ,CAAiBP,MAAM,UAAUS,WAAY,EAAGJ,WAAY,IAAKe,MAAM,SAASnB,aAAc,GAC3FiB,EAAcN,QAGlBM,EAAcF,IAAI,SAACL,EAAMM,GAAP,OACjBxB,EAAAC,EAAAC,cAAA,QAAMwB,IAAKF,EAAOX,UAAW5D,EAAG,kCAQ5C+C,EAAAC,EAAAC,cAAA,OAAKW,UAAW5D,EAAG,uBAAwB,yBACxCuC,EAAe+B,IAAI,SAACrD,EAAMsD,GAAP,OAClBxB,EAAAC,EAAAC,cAAA,QAAMwB,IAAKF,EAAOX,UAAW5D,EAAG,yBAC9B+C,EAAAC,EAAAC,cAACE,EAAA,EAAWU,KAAZ,CAAiBC,SAAU,GAAIR,MAAM,QAAQS,WAAY,GACtD/C,EAAWC,IAEd8B,EAAAC,EAAAC,cAACE,EAAA,EAAWU,KAAZ,CAAiBC,SAAU,EAAGH,WAAY,IAAKL,MAAM,aAAaS,WAAY,EAAGL,UAAW,GACzFxC,YAAOD,EAAM,OAAO0D,oBAO/B5B,EAAAC,EAAAC,cAAA,OAAKW,UAAW5D,EAAG,uCACjB+C,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CACEC,KAAK,KACLC,MAAM,UACNC,UAAU,EACVC,MAAO,IACPC,QAAS,SAAAC,GAAK,OAAI5C,EAAU,CAAEN,MAAOmD,YAAS9C,EAAOL,MAAO,GAAIC,IAAKkD,YAAS9C,EAAOJ,IAAK,OAL5F,QASAc,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CACEC,KAAK,KACLC,MAAM,UACNC,UAAU,EACVC,MAAO,IACPI,SAAUhF,EAAWiC,EAAOJ,IAAKnB,GACjCmE,QAAS,SAAAC,GAAK,OAAI5C,EAAU,CAAEN,MAAOqD,YAAShD,EAAOL,MAAO,GAAIC,IAAKoD,YAAShD,EAAOJ,IAAK,OAN5F,iCC1HRqD,EAAAC,QAAA,CAAkBC,wBAAA,qCAAAC,sBAAA,mCAAAC,yBAAA,sCAAAC,gCAAA,6CAAAC,wBAAA,qCAAAC,uBAAA,oCAAAC,gCAAA,6CAAAC,wBAAA,qCAAAC,uBAAA,oCAAAC,uBAAA,oCAAAC,qCAAA","file":"static/js/8.4b0a019d.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport classnames from 'classnames/bind'\nimport { subWeeks, addWeeks, startOfWeek, endOfWeek, eachDayOfInterval, isSameYear, isSameMonth, isSameDay, isSameWeek, format } from 'date-fns'\n\n// Components\nimport Button from '../../components/Button'\nimport Typography from '../../components/Typography'\nimport { propTypes as TaskPropTypes } from '../../components/Task'\n\n// Style\nimport styles from './style.module.scss'\n\n// Modules\nimport { selectors } from '../../lib/redux/modules/task'\n\n// Variables / Functions\nconst cx = classnames.bind(styles)\nconst isSameDate = (first, second) => isSameYear(first, second) && isSameMonth(first, second) && isSameDay(first, second)\nconst today = new Date()\nconst startOfThisWeek = startOfWeek(today)\nconst endOfThisWeek = endOfWeek(today)\nconst formatDate = date => format(date, 'MM/dd')\n\nexport const propTypes = {\n  tasks: PropTypes.arrayOf(TaskPropTypes.task),\n}\n\nfunction TaskAnalytics (props) {\n  const { tasks } = props\n\n  const [period, setPeriod] = useState({ start: startOfThisWeek, end: endOfThisWeek })\n  const periodInterval = eachDayOfInterval(period)\n\n  const histories = tasks.reduce((acc, task) => [...acc, ...task.workHistory], [])\n\n  return (\n    <>\n      <Typography.Title level='h1' color='white' marginBottom={0} letterSpacing='.1em'>\n        ANALYTICS REPORT\n      </Typography.Title>\n\n      <Typography.Hr marginTop={25} marginBottom={25} />\n\n      <Typography.Title level='h5' color='gray-light' fontWeight={700} marginBottom={10}>\n        TOMATO OF THIS WEEK\n      </Typography.Title>\n\n      <div className={cx('task-analytics__panel', 'task-analytics__row')}>\n        <div className={cx('task-analytics__column')}>\n          <Typography.Text color='primary' fontSize={50} fontWeight={700} marginBottom={0} lineHeight={1.2}>\n            {histories.filter(time => isSameDate(time, today)).length}\n          </Typography.Text>\n          <Typography.Text color='white' fontSize={10} lineHeight={1}>\n            TODAY\n          </Typography.Text>\n        </div>\n        <div className={cx('task-analytics__column')}>\n          <Typography.Text color='primary' fontSize={50} fontWeight={700} marginBottom={0} lineHeight={1.2}>\n            {histories.filter(time => isSameWeek(time, today)).length}\n          </Typography.Text>\n          <Typography.Text color='white' fontSize={10} lineHeight={1}>\n            {formatDate(startOfThisWeek)}-{formatDate(endOfThisWeek)}\n          </Typography.Text>\n        </div>\n      </div>\n\n      <Typography.Hr marginTop={25} marginBottom={25} />\n\n      <Typography.Title level='h4' color='gray-light' fontWeight={700} marginBottom={10}>\n        CHART\n        <Typography.Text fontSize={10} color='white' marginBottom={0} style={{ marginLeft: 2 }}>\n          {formatDate(period.start)}-{formatDate(period.end)}\n        </Typography.Text>\n      </Typography.Title>\n\n      <div className={cx('task-analytics__chart-wrapper')}>\n        <div className={cx('task-analytics__panel', 'task-analytics__chart')}>\n          <div className={cx('task-analytics__grid')}>\n            {periodInterval.map((date, index) => {\n              const dateHistories = histories.filter(time => isSameDate(time, date))\n\n              return (\n                <div key={index} className={cx('task-analytics__count-wrapper')}>\n                  {dateHistories.length > 0 && (\n                    <Typography.Text color='primary' lineHeight={1} fontWeight={700} align='center' marginBottom={5}>\n                      {dateHistories.length}\n                    </Typography.Text>\n                  )}\n                  {dateHistories.map((time, index) => (\n                    <span key={index} className={cx('task-analytics__count')} />\n                  ))}\n                </div>\n              )\n            })}\n          </div>\n        </div>\n\n        <div className={cx('task-analytics__grid', 'task-analytics__week')}>\n          {periodInterval.map((date, index) => (\n            <span key={index} className={cx('task-analytics__date')}>\n              <Typography.Text fontSize={10} color='white' lineHeight={1}>\n                {formatDate(date)}\n              </Typography.Text>\n              <Typography.Text fontSize={8} fontWeight={700} color='gray-light' lineHeight={1} marginTop={2}>\n                {format(date, 'EEE').toUpperCase()}\n              </Typography.Text>\n            </span>\n          ))}\n        </div>\n      </div>\n\n      <div className={cx('task-analytics__navigation-wrapper')}>\n        <Button\n          size='sm'\n          shape='rounded'\n          isFilled={false}\n          width={100}\n          onClick={event => setPeriod({ start: subWeeks(period.start, 1), end: subWeeks(period.end, 1) })}\n        >\n          PREV\n        </Button>\n        <Button\n          size='sm'\n          shape='rounded'\n          isFilled={false}\n          width={100}\n          disabled={isSameDate(period.end, endOfThisWeek)}\n          onClick={event => setPeriod({ start: addWeeks(period.start, 1), end: addWeeks(period.end, 1) })}\n        >\n          NEXT\n        </Button>\n      </div>\n    </>\n  )\n}\n\nTaskAnalytics.propTypes = propTypes\n\nconst mapStateToProps = (state, props) => {\n  return {\n    tasks: selectors.getList(state, props),\n  }\n}\n\nconst mapDispatchToProps = {}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TaskAnalytics)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task-analytics__panel\":\"style_task-analytics__panel__3-Iq8\",\"task-analytics__row\":\"style_task-analytics__row__1uAsk\",\"task-analytics__column\":\"style_task-analytics__column__r4liJ\",\"task-analytics__chart-wrapper\":\"style_task-analytics__chart-wrapper__2J3EL\",\"task-analytics__chart\":\"style_task-analytics__chart__2zHqr\",\"task-analytics__grid\":\"style_task-analytics__grid__352mD\",\"task-analytics__count-wrapper\":\"style_task-analytics__count-wrapper__13Y6i\",\"task-analytics__count\":\"style_task-analytics__count__1CDhP\",\"task-analytics__week\":\"style_task-analytics__week__2JNDw\",\"task-analytics__date\":\"style_task-analytics__date__2YdE4\",\"task-analytics__navigation-wrapper\":\"style_task-analytics__navigation-wrapper__2mZlM\"};"],"sourceRoot":""}